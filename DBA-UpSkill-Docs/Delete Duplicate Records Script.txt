IF EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE name = 'DelDuplicateRecords' and xtype = 'P' ) 
    DROP PROCEDURE DelDuplicateRecords 
GO 
 
CREATE PROCEDURE dbo.DelDuplicateRecords 
( 
    @tableName    sysname 
   ,@check        int = 0    --- 0 just to see what are duplicates, 1 delete the duplicates. 
) 
AS 
BEGIN 
    DECLARE @columnsDelimited    NVARCHAR(max) 
            ,@dySql                NVARCHAR(max) 
            ,@tran                int 
            ,@tempTable            sysname 
    SET @tran = 0 
    SET @columnsDelimited = '' 
    SET @tempTable = 'delteDuplicates' + CAST (@@SPID AS VARCHAR) 
    BEGIN TRY 
 
        IF NOT EXISTS ( SELECT    1 
                        FROM    sys.tables 
                        WHERE    name    = @tableName 
                      ) 
        BEGIN 
            PRINT @tableName + ' not exists in the current database' 
            RETURN -1 
        END 
        SELECT @columnsDelimited = @columnsDelimited 
                                    + CASE LEN(@columnsDelimited) 
                                        WHEN 0 THEN '' 
                                            ELSE ',' 
                                        END 
                                    + QUOTENAME(c.name) 
        FROM sys.columns C 
        JOIN sys.tables  T 
        ON     C.object_id    = T.object_id 
        AND  c.is_identity  = 0 
        AND  T.name            = @tableName 
 
        IF OBJECT_ID(@tempTable) IS NOT NULL 
        BEGIN 
            SET @dySql = 'DROP TABLE ' + @tempTable 
            exec (@dySql) 
        END 
 
        SET @dySql    = 'SELECT ROW_NUMBER() OVER(PARTITION BY ' + @columnsDelimited  + ' ORDER BY ' +@columnsDelimited + ' ) as row_number_delete, * into '  + @tempTable 
                        + ' FROM ' + @tableName 
        exec sp_executeSQl @dySql 
        SELECT @dySql 
 
        IF (@check = 0) 
        BEGIN 
            SET @dySql = 'SELECT * FROM ' + @tempTable + ' WHERE row_number_delete > 1 ' 
            EXEC (@dySql) 
        END 
 
        IF (@check = 1) 
        BEGIN 
            SET @dySql = 'DELETE ' + @tempTable + ' WHERE row_number_delete > 1' 
            EXEC (@dySql) 
 
            BEGIN TRAN 
                SET @tran = 1 
                SET @dySql    = 'TRUNCATE TABLE ' +@tableName 
                EXEC ( @dySql) 
 
                SET @dySql    = 'INSERT INTO ' + @tableName + ' (' +@columnsDelimited + ') ' + 'SELECT ' + @columnsDelimited + ' FROM ' + @tempTable 
                EXEC ( @dySql) 
 
            COMMIT TRAN 
        END 
 
    END TRY 
    BEGIN CATCH 
        IF (@tran = 1) 
            ROLLBACK; 
        SELECT 'errored_line '+ CAST (ERROR_LINE() AS VARCHAR) + ' error_msg ' + ERROR_MESSAGE() + ' error_number ' + ERROR_NUMBER() 
    END CATCH; 
END 
 
GO 